server:
  port: 8080

logging:
  level:
    root: INFO

spring:
  application:
    name: eda-dummy
  main:
    banner-mode: off
  mvc:
    throw-exception0if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  cloud:
    function:
      definition: eventSupplier;eventConsumerOne;eventConsumerTwo
    stream:
      bindings:
        eventSupplier-out-0:
          producer:
            useNativeEncoding: true
          destination: "RBRO.TEST.EVENT"
          content-type: application/*+avro
        eventConsumerOne-in-0:
          destination: "RBRO.TEST.EVENT"
          consumer:
            useNativeEncoding: true
          group: cosmin-consumer-group-1
        eventConsumerTwo-in-0:
          destination: "RBRO.TEST.EVENT"
          consumer:
            useNativeEncoding: true
          group: cosmin-consumer-group-2
      kafka:
        binder:
          brokers: pkc-zpjg0.eu-central-1.aws.confluent.cloud:9092
          autoCreateTopics: false
          autoAddPartitions: false
          configuration:
            security.protocol: SASL_SSL
            sasl:
              mechanism: PLAIN
              jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule   required username='F74FC3CBGTSH4NER'   password='Wyt3D6f60Mc1Ka9sPJyz1AULfePNaDvkVj62mv7E/u30EtvuzcsgbkfeXVQZkn90';"
          producer-properties:
            value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
            value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
            auto.register.schemas: false
            avro.remove.java.properties: true
            avro.use.logical.type.converters: true
            use.latest.version: true
            client.dns.lookup: use_all_dns_ips
            basic.auth.credentials.source: USER_INFO
            schema.registry.url: https://psrc-8vyvr.eu-central-1.aws.confluent.cloud
            schema.registry.basic.auth.user.info: "KPGCI5YXRFFLWEQV:IP4tsPmZa73x/P2/oYO07bKWtYx2jhsbf53FWatItt2ccwvE/h7yPpkLD+7GbTUH"
          consumer-properties:
            value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
            value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicNameStrategy
            auto.register.schemas: false
            specific.avro.reader: true
            use.latest.version: true
            client.dns.lookup: use_all_dns_ips
            basic.auth.credentials.source: USER_INFO
            schema.registry.url: https://psrc-8vyvr.eu-central-1.aws.confluent.cloud
            schema.registry.basic.auth.user.info: "KPGCI5YXRFFLWEQV:IP4tsPmZa73x/P2/oYO07bKWtYx2jhsbf53FWatItt2ccwvE/h7yPpkLD+7GbTUH"
        bindings:
          eventSupplier-out-0:
            producer:
              configuration:
                client.id: cosmin-producer-dev-0
#          eventConsumer-in-0:
#            consumer:
#              configuration:
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /management
      exposure:
        include: '*'

producer:
  interval: 10000
  delay: 1000
  threads: 1